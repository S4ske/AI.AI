"""empty message

Revision ID: 4f3133fa0214
Revises: 1d3e9633c87d
Create Date: 2025-03-09 20:03:36.743458

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4f3133fa0214"
down_revision: Union[str, None] = "1d3e9633c87d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("animations")
    op.drop_table("animated_images")
    op.drop_table("projects")
    op.drop_index("ix_users_email", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("username", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("hashed_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_users_email", "users", ["email"], unique=True)
    op.create_table(
        "projects",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('projects_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("height", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("width", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("fps", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "duration",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("owner_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "background_color",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["owner_id"], ["users.id"], name="projects_owner_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="projects_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "animated_images",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('animated_images_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("image_path", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("height", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("width", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "angle",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "opacity",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("x", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column("y", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.Column(
            "living_start",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "living_end",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], name="animated_images_project_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="animated_images_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "animations",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("param_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "start_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "end_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "start_point",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "end_point",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("animated_image_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["animated_image_id"],
            ["animated_images.id"],
            name="animations_animated_image_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="animations_pkey"),
    )
    # ### end Alembic commands ###
